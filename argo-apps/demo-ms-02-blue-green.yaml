apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: demo-ms-2
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - cluster: https://kubernetes.default.svc
  template:
    metadata:
      name: demo-ms-2
    spec:
      project: "lab-apps"
      source:
        repoURL: 'registry-1.docker.io/paulofponciano'
        chart: demo-ms-intercomunicacao
        targetRevision: 0.1.15
        helm:
          releaseName: demo-ms-2
          valuesObject:
            name: demo-ms-2
            namespace: demo
            image: paulofponciano/demo-ms-intercomunicacao:latest
            replicas: 1
            env:
              - name: TITLE
                value: "Microservice 2"
              - name: RESPONSE_TIME
                value: "500"
              - name: EXTERNAL_CALL_URL
                value: "http://demo-ms-3.demo.svc.cluster.local:5000"
              - name: EXTERNAL_CALL_METHOD
                value: "GET"
              - name: APP_VERSION
                value: "0.1.4"
            service:
              portName: http
              port: 5000
              protocol: TCP
              targetPort: 5000
            istio:
              virtualService:
                enabled: true
                protocol: http
                retries:
                  attempts: 2
                  perTryTimeout: 500ms
                  retryOn: connect-failure,refused-stream,unavailable,cancelled,503
              gateway:
                enabled: false
                name: demo-ms-2-gateway
                host: demo-ms-intercomunicacao.sevira.cloud
                selector: ingressgateway
            prometheus:
              scrape: false
              path: /metrics
              port: 5000
            livenessProbe:
              enabled: true
              path: /healthz
              initialDelaySeconds: 5
              periodSeconds: 10
            readinessProbe:
              enabled: true
              path: /ready
              initialDelaySeconds: 5
              periodSeconds: 10
            strategy:
              type: blueGreen
              blueGreen:
                activeService: demo-ms-2
                previewService: demo-ms-2-green
                autoPromotionEnabled: false
      destination:
        server: '{{ cluster }}'
        namespace: argocd
      syncPolicy:
        automated: {}
