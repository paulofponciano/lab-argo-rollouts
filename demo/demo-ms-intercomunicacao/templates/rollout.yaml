apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-python: "o11y/python-auto-instrumentation"
        {{- if .Values.prometheus.scrape }}
        prometheus.io/scrape: "true"
        prometheus.io/path: "{{ .Values.prometheus.path }}"
        prometheus.io/port: "{{ .Values.prometheus.port }}"
        {{- end }}
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
        - name: app
          image: {{ .Values.image }}
          ports:
            - containerPort: {{ .Values.service.targetPort | default 5000 }}
          env:
{{- toYaml .Values.env | nindent 12 }}
{{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.service.targetPort | default 5000 }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            {{- if .Values.livenessProbe.timeoutSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            {{- end }}
            {{- if .Values.livenessProbe.failureThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            {{- end }}
            {{- if .Values.livenessProbe.successThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            {{- end }}
{{- end }}
{{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.service.targetPort | default 5000 }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            {{- if .Values.readinessProbe.timeoutSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            {{- end }}
            {{- if .Values.readinessProbe.failureThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            {{- end }}
            {{- if .Values.readinessProbe.successThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            {{- end }}
{{- end }}
  strategy:
{{- if eq .Values.strategy.type "canary" }}
    canary:
      steps:
{{ toYaml .Values.strategy.canary.steps | nindent 8 }}
{{- else if eq .Values.strategy.type "blueGreen" }}
    blueGreen:
      activeService: {{ .Values.strategy.blueGreen.activeService }}
      previewService: {{ .Values.strategy.blueGreen.previewService }}
      autoPromotionEnabled: {{ .Values.strategy.blueGreen.autoPromotionEnabled }}
{{- end }}